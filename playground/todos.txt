Tech debts

- unit tests!

- review RAII and 5 of 5 principle (move semantics) in resources/playground classes.
	specially in file parser / text parser and resources.

- resource adapters should have two mimetypes: input mimetype (similar to content-type)	and output mimetype (similar to accept)

- resources should have labels and allow deletion by labels.

- There should be a way of marking some resources "temporal" or "ephemeral" since they are auxiliar in creating other objects but we don't want to keep them permanently in cach√©.

- review design of particle manager/collision detector / geometry vs particles / etc. Too much vector passing and copying. Review polymorfism / std::vector<unique_ptr> usage.

- add 'override' to overridden virtual methods (forces compiler to check everything is ok)

- Review collision action design: use lambdas instead of template pattern for collision response actions. Review design of BulletParticle used for playing sounds on balls bouncing.

- Review collision detection / response: there is no way to configure restitution factor - should be based on the two objects colliding and/or configurable.

- improve box rendering (normals)

- delete demos after they are finished (or they do not trigger destructors if many demos are run).

----------------

New stuff:

- Road fighter:
	- Add support for loading single resources from a file containing multiple objects (obj files)
	- Add textured object code support, so that I can load and display a 3d object instead of having to load the vertex array, texture and material separatedly. 
	- Add labels to resources, so that we can unload a level resources and load next levels.



- Add menu for selecting demo. At least add cli parameters to allow selecting demo - anything better than commenting lines in main.cpp

- TerrainDemo: 
	- Add class to compose several terrain patches and make calculations to determine which patch. 
	- mod infinite terrain? render those inside camera frustrum
	- Add some class to generate bounding geometry from this.
	- Some other tree model
	- Add grass / ferns with transparency
	- use own particle class or review design (lambdas maybe?)

Games: 
- Battle city:

- tanques vs naves
- defend the tower
- scenery (with train or racing cars - lightning mcqueen and cruz, wind/rain, vegetation and animals, water, day/night transition, sun and moon, etc.)

robotica - brazo (curso)